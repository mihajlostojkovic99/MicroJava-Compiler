INFO  16:29:53,436 - Compiling source file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  16:29:53,477 - #2 program
INFO  16:29:53,477 - #49 Test
INFO  16:29:53,477 - #6 const
INFO  16:29:53,478 - #49 int
INFO  16:29:53,478 - #49 x
INFO  16:29:53,479 - #34 =
INFO  16:29:53,479 - #47 5
INFO  16:29:53,479 - #37 ;
INFO  16:29:53,480 - #49 int
INFO  16:29:53,480 - #49 a
INFO  16:29:53,480 - #37 ;
INFO  16:29:53,481 - #49 char
INFO  16:29:53,481 - #49 b
INFO  16:29:53,482 - #37 ;
INFO  16:29:53,482 - #49 int
INFO  16:29:53,482 - #49 c
INFO  16:29:53,482 - #37 ;
INFO  16:29:53,482 - #45 {
INFO  16:29:53,482 - #14 void
INFO  16:29:53,483 - #49 main
INFO  16:29:53,484 - #41 (
INFO  16:29:53,484 - #42 )
INFO  16:29:53,486 - #49 int
INFO  16:29:53,486 - #49 d
INFO  16:29:53,486 - #39 ,
INFO  16:29:53,487 - #49 arr
INFO  16:29:53,488 - #43 [
INFO  16:29:53,488 - #44 ]
INFO  16:29:53,488 - #37 ;
INFO  16:29:53,489 - #49 char
INFO  16:29:53,489 - #49 e
INFO  16:29:53,489 - #37 ;
INFO  16:29:53,489 - #49 bool
INFO  16:29:53,489 - #49 f
INFO  16:29:53,490 - #37 ;
INFO  16:29:53,490 - #45 {
INFO  16:29:53,490 - #49 arr
INFO  16:29:53,490 - #34 =
INFO  16:29:53,491 - #10 new
INFO  16:29:53,492 - #49 int
INFO  16:29:53,492 - #43 [
INFO  16:29:53,492 - #47 10
INFO  16:29:53,492 - #44 ]
INFO  16:29:53,495 - #37 ;
INFO  16:29:53,495 - #11 print
INFO  16:29:53,495 - #41 (
INFO  16:29:53,495 - #49 arr
INFO  16:29:53,496 - #43 [
INFO  16:29:53,497 - #47 3
INFO  16:29:53,497 - #44 ]
INFO  16:29:53,497 - #42 )
INFO  16:29:53,498 - #37 ;
INFO  16:29:53,498 - #46 }
INFO  16:29:53,498 - #46 }
INFO  16:29:53,500 - Program(
  ProgramName(
   Test
  ) [ProgramName]
  ListVar(
    ListVar(
      ListVar(
        ListConst(
          NoList(
          ) [NoList]
          ConstDeclWrapperClass(
            Type(
             int
            ) [Type]
            SingleConstDeclaration(
              ConstDeclNumber(
               x
               5
              ) [ConstDeclNumber]
            ) [SingleConstDeclaration]
          ) [ConstDeclWrapperClass]
        ) [ListConst]
        VarDeclWrapper(
          Type(
           int
          ) [Type]
          SingleVarDecl(
            NormalVarDecl(
             a
            ) [NormalVarDecl]
          ) [SingleVarDecl]
        ) [VarDeclWrapper]
      ) [ListVar]
      VarDeclWrapper(
        Type(
         char
        ) [Type]
        SingleVarDecl(
          NormalVarDecl(
           b
          ) [NormalVarDecl]
        ) [SingleVarDecl]
      ) [VarDeclWrapper]
    ) [ListVar]
    VarDeclWrapper(
      Type(
       int
      ) [Type]
      SingleVarDecl(
        NormalVarDecl(
         c
        ) [NormalVarDecl]
      ) [SingleVarDecl]
    ) [VarDeclWrapper]
  ) [ListVar]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethDeclNoParams(
      MethodRetVoid(
      ) [MethodRetVoid]
      MethodName(
       main
      ) [MethodName]
      IsListVarDeclWrapper(
        IsListVarDeclWrapper(
          IsListVarDeclWrapper(
            NoListVarDeclWrapper(
            ) [NoListVarDeclWrapper]
            VarDeclWrapper(
              Type(
               int
              ) [Type]
              VarDeclarations(
                SingleVarDecl(
                  NormalVarDecl(
                   d
                  ) [NormalVarDecl]
                ) [SingleVarDecl]
                ArrayVarDecl(
                 arr
                ) [ArrayVarDecl]
              ) [VarDeclarations]
            ) [VarDeclWrapper]
          ) [IsListVarDeclWrapper]
          VarDeclWrapper(
            Type(
             char
            ) [Type]
            SingleVarDecl(
              NormalVarDecl(
               e
              ) [NormalVarDecl]
            ) [SingleVarDecl]
          ) [VarDeclWrapper]
        ) [IsListVarDeclWrapper]
        VarDeclWrapper(
          Type(
           bool
          ) [Type]
          SingleVarDecl(
            NormalVarDecl(
             f
            ) [NormalVarDecl]
          ) [SingleVarDecl]
        ) [VarDeclWrapper]
      ) [IsListVarDeclWrapper]
      StatementListExists(
        StatementListExists(
          NoStatementList(
          ) [NoStatementList]
          StatementWithSingleStatement(
            DesignatorSingleStatement(
              DesStmAssign(
                DesignatorSimple(
                 arr
                ) [DesignatorSimple]
                AssignWrap(
                  Assignop(
                  ) [Assignop]
                  Expr(
                    SingleTerm(
                      FactorWrapper(
                        NoUnary(
                        ) [NoUnary]
                        NewFactorWithPars(
                          Type(
                           int
                          ) [Type]
                          Expr(
                            SingleTerm(
                              FactorWrapper(
                                NoUnary(
                                ) [NoUnary]
                                Num(
                                 10
                                ) [Num]
                              ) [FactorWrapper]
                            ) [SingleTerm]
                            NoMoreExpr(
                            ) [NoMoreExpr]
                          ) [Expr]
                        ) [NewFactorWithPars]
                      ) [FactorWrapper]
                    ) [SingleTerm]
                    NoMoreExpr(
                    ) [NoMoreExpr]
                  ) [Expr]
                ) [AssignWrap]
              ) [DesStmAssign]
            ) [DesignatorSingleStatement]
          ) [StatementWithSingleStatement]
        ) [StatementListExists]
        StatementWithSingleStatement(
          PrintSingleStatement(
            Expr(
              SingleTerm(
                FactorWrapper(
                  NoUnary(
                  ) [NoUnary]
                  NormalFactor(
                    DesignatorArr(
                      DesignatorArrName(
                       arr
                      ) [DesignatorArrName]
                      Expr(
                        SingleTerm(
                          FactorWrapper(
                            NoUnary(
                            ) [NoUnary]
                            Num(
                             3
                            ) [Num]
                          ) [FactorWrapper]
                        ) [SingleTerm]
                        NoMoreExpr(
                        ) [NoMoreExpr]
                      ) [Expr]
                    ) [DesignatorArr]
                  ) [NormalFactor]
                ) [FactorWrapper]
              ) [SingleTerm]
              NoMoreExpr(
              ) [NoMoreExpr]
            ) [Expr]
          ) [PrintSingleStatement]
        ) [StatementWithSingleStatement]
      ) [StatementListExists]
    ) [MethDeclNoParams]
  ) [MethodDeclarations]
) [Program]
INFO  16:29:53,501 - ===================================
INFO  16:29:53,504 -  Program count calls = 1
INFO  16:29:53,514 - ===================================
INFO  16:29:53,515 - Generating bytecode file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.obj
INFO  16:29:53,519 - Parsiranje uspesno zavrseno!
