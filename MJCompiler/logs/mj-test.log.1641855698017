INFO  00:01:24,405 - Compiling source file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  00:01:24,446 - #2 program
INFO  00:01:24,447 - #50 p
INFO  00:01:24,447 - #7 const
INFO  00:01:24,447 - #50 int
INFO  00:01:24,448 - #50 size
INFO  00:01:24,448 - #35 =
INFO  00:01:24,448 - #48 10
INFO  00:01:24,448 - #38 ;
INFO  00:01:24,448 - #50 int
INFO  00:01:24,449 - #50 a
INFO  00:01:24,449 - #40 ,
INFO  00:01:24,450 - #50 b
INFO  00:01:24,450 - #38 ;
INFO  00:01:24,450 - #50 int
INFO  00:01:24,451 - #50 c
INFO  00:01:24,451 - #38 ;
INFO  00:01:24,451 - #4 class
INFO  00:01:24,451 - #50 Table
INFO  00:01:24,451 - #16 extends
INFO  00:01:24,451 - #50 A
INFO  00:01:24,451 - #46 {
INFO  00:01:24,451 - #50 int
INFO  00:01:24,452 - #50 a
INFO  00:01:24,452 - #40 ,
INFO  00:01:24,453 - #50 b
INFO  00:01:24,453 - #44 [
INFO  00:01:24,453 - #45 ]
INFO  00:01:24,453 - #38 ;
INFO  00:01:24,453 - #50 string
INFO  00:01:24,453 - #50 s
INFO  00:01:24,453 - #38 ;
INFO  00:01:24,453 - #46 {
INFO  00:01:24,454 - #15 void
INFO  00:01:24,455 - #50 putp
INFO  00:01:24,455 - #42 (
INFO  00:01:24,455 - #50 int
INFO  00:01:24,455 - #50 a
INFO  00:01:24,455 - #40 ,
INFO  00:01:24,455 - #50 int
INFO  00:01:24,455 - #50 idx
INFO  00:01:24,456 - #43 )
INFO  00:01:24,456 - #46 {
INFO  00:01:24,457 - #47 }
INFO  00:01:24,457 - #50 int
INFO  00:01:24,458 - #50 testingMore
INFO  00:01:24,458 - #42 (
INFO  00:01:24,458 - #43 )
INFO  00:01:24,458 - #50 float
INFO  00:01:24,458 - #50 random
INFO  00:01:24,460 - #38 ;
INFO  00:01:24,460 - #46 {
INFO  00:01:24,460 - #50 random
INFO  00:01:24,460 - #35 =
INFO  00:01:24,461 - #50 a
INFO  00:01:24,462 - #41 .
INFO  00:01:24,462 - #50 fetchRandomTest
INFO  00:01:24,462 - #42 (
INFO  00:01:24,462 - #43 )
INFO  00:01:24,462 - #24 *
INFO  00:01:24,462 - #48 100
INFO  00:01:24,463 - #22 +
INFO  00:01:24,464 - #48 1
INFO  00:01:24,464 - #38 ;
INFO  00:01:24,465 - #50 random
INFO  00:01:24,465 - #36 ++
INFO  00:01:24,465 - #38 ;
INFO  00:01:24,465 - #8 if
INFO  00:01:24,466 - #42 (
INFO  00:01:24,466 - #50 random
INFO  00:01:24,473 - #29 >
INFO  00:01:24,473 - #48 25
INFO  00:01:24,474 - #24 *
INFO  00:01:24,474 - #48 2
INFO  00:01:24,475 - #33 &&
INFO  00:01:24,475 - #50 random
INFO  00:01:24,475 - #32 <=
INFO  00:01:24,475 - #48 1
INFO  00:01:24,476 - #22 +
INFO  00:01:24,476 - #48 50
INFO  00:01:24,476 - #24 *
INFO  00:01:24,476 - #48 2
INFO  00:01:24,476 - #43 )
INFO  00:01:24,476 - #46 {
INFO  00:01:24,476 - #9 do
INFO  00:01:24,476 - #46 {
INFO  00:01:24,476 - #50 random
INFO  00:01:24,476 - #35 =
INFO  00:01:24,476 - #50 random
INFO  00:01:24,476 - #23 -
INFO  00:01:24,476 - #48 1
INFO  00:01:24,477 - #38 ;
INFO  00:01:24,477 - #8 if
INFO  00:01:24,477 - #42 (
INFO  00:01:24,477 - #50 WorldTime
INFO  00:01:24,477 - #41 .
INFO  00:01:24,477 - #50 currentTime
INFO  00:01:24,477 - #44 [
INFO  00:01:24,477 - #50 Today
INFO  00:01:24,477 - #45 ]
INFO  00:01:24,478 - #27 ==
INFO  00:01:24,478 - #50 Late
INFO  00:01:24,478 - #43 )
INFO  00:01:24,478 - #17 continue
INFO  00:01:24,478 - #38 ;
INFO  00:01:24,478 - #47 }
INFO  00:01:24,479 - #10 while
INFO  00:01:24,479 - #42 (
INFO  00:01:24,480 - #50 random
INFO  00:01:24,480 - #28 !=
INFO  00:01:24,480 - #48 0
INFO  00:01:24,480 - #43 )
INFO  00:01:24,480 - #38 ;
INFO  00:01:24,480 - #3 break
INFO  00:01:24,481 - #38 ;
INFO  00:01:24,481 - #50 loop
INFO  00:01:24,481 - #39 :
INFO  00:01:24,482 - #9 do
INFO  00:01:24,482 - #50 random
INFO  00:01:24,482 - #36 ++
INFO  00:01:24,482 - #38 ;
INFO  00:01:24,482 - #10 while
INFO  00:01:24,482 - #42 (
INFO  00:01:24,482 - #50 random
INFO  00:01:24,482 - #31 <
INFO  00:01:24,482 - #48 50
INFO  00:01:24,482 - #43 )
INFO  00:01:24,482 - #38 ;
INFO  00:01:24,483 - #47 }
INFO  00:01:24,483 - #6 else
INFO  00:01:24,483 - #20 goto
INFO  00:01:24,483 - #50 loop
INFO  00:01:24,483 - #38 ;
INFO  00:01:24,483 - #50 s
INFO  00:01:24,483 - #35 =
INFO  00:01:24,483 - #50 success
INFO  00:01:24,483 - #38 ;
INFO  00:01:24,484 - #12 print
INFO  00:01:24,484 - #42 (
INFO  00:01:24,484 - #48 5
INFO  00:01:24,484 - #43 )
INFO  00:01:24,484 - #38 ;
INFO  00:01:24,484 - #47 }
INFO  00:01:24,484 - #47 }
INFO  00:01:24,484 - #47 }
INFO  00:01:24,484 - #50 float
INFO  00:01:24,485 - #50 c
INFO  00:01:24,485 - #40 ,
INFO  00:01:24,485 - #50 d
INFO  00:01:24,485 - #38 ;
INFO  00:01:24,485 - #21 record
INFO  00:01:24,485 - #50 r
INFO  00:01:24,485 - #46 {
INFO  00:01:24,485 - #47 }
INFO  00:01:24,485 - #46 {
INFO  00:01:24,486 - #47 }
INFO  00:01:24,489 - Program(
 p
  ListRecord(
    ListVar(
      ListClass(
        ListVar(
          ListVar(
            ListConst(
              NoList(
              ) [NoList]
              ConstDeclWrapper(
                Type(
                 int
                ) [Type]
                SingleConstDeclaration(
                  ConstDeclNumber(
                   size
                   10
                  ) [ConstDeclNumber]
                ) [SingleConstDeclaration]
              ) [ConstDeclWrapper]
            ) [ListConst]
            VarDeclWrapper(
              Type(
               int
              ) [Type]
              VarDeclarations(
                SingleVarDecl(
                  NormalVarDecl(
                   a
                  ) [NormalVarDecl]
                ) [SingleVarDecl]
                NormalVarDecl(
                 b
                ) [NormalVarDecl]
              ) [VarDeclarations]
            ) [VarDeclWrapper]
          ) [ListVar]
          VarDeclWrapper(
            Type(
             int
            ) [Type]
            SingleVarDecl(
              NormalVarDecl(
               c
              ) [NormalVarDecl]
            ) [SingleVarDecl]
          ) [VarDeclWrapper]
        ) [ListVar]
        ClassExtendsWithVarsAndMethods(
         Table
          Type(
           A
          ) [Type]
          IsListVarDeclWrapper(
            IsListVarDeclWrapper(
              NoListVarDeclWrapper(
              ) [NoListVarDeclWrapper]
              VarDeclWrapper(
                Type(
                 int
                ) [Type]
                VarDeclarations(
                  SingleVarDecl(
                    NormalVarDecl(
                     a
                    ) [NormalVarDecl]
                  ) [SingleVarDecl]
                  ArrayVarDecl(
                   b
                  ) [ArrayVarDecl]
                ) [VarDeclarations]
              ) [VarDeclWrapper]
            ) [IsListVarDeclWrapper]
            VarDeclWrapper(
              Type(
               string
              ) [Type]
              SingleVarDecl(
                NormalVarDecl(
                 s
                ) [NormalVarDecl]
              ) [SingleVarDecl]
            ) [VarDeclWrapper]
          ) [IsListVarDeclWrapper]
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethDeclVoidParams(
               putp
                FormParameters(
                  SingleFormPars(
                    FormalParameter(
                      Type(
                       int
                      ) [Type]
                     a
                    ) [FormalParameter]
                  ) [SingleFormPars]
                  FormalParameter(
                    Type(
                     int
                    ) [Type]
                   idx
                  ) [FormalParameter]
                ) [FormParameters]
                NoListVarDeclWrapper(
                ) [NoListVarDeclWrapper]
                NoStatementList(
                ) [NoStatementList]
              ) [MethDeclVoidParams]
            ) [MethodDeclarations]
            MethDeclNoParams(
              Type(
               int
              ) [Type]
             testingMore
              IsListVarDeclWrapper(
                NoListVarDeclWrapper(
                ) [NoListVarDeclWrapper]
                VarDeclWrapper(
                  Type(
                   float
                  ) [Type]
                  SingleVarDecl(
                    NormalVarDecl(
                     random
                    ) [NormalVarDecl]
                  ) [SingleVarDecl]
                ) [VarDeclWrapper]
              ) [IsListVarDeclWrapper]
              StatementListExists(
                StatementListExists(
                  StatementListExists(
                    StatementListExists(
                      StatementListExists(
                        NoStatementList(
                        ) [NoStatementList]
                        StatementWithSingleStatement(
                          DesignatorSingleStatement(
                            DesStmAssign(
                              DesignatorWithArr(
                               random
                                NoDesgArr(
                                ) [NoDesgArr]
                              ) [DesignatorWithArr]
                              Assignop(
                              ) [Assignop]
                              ExprPositive(
                                MultipleTerms(
                                  SingleTerm(
                                    FactorWithoutActPars(
                                      DesignatorDot(
                                       a
                                        DesignatorWithArr(
                                         fetchRandomTest
                                          NoDesgArr(
                                          ) [NoDesgArr]
                                        ) [DesignatorWithArr]
                                      ) [DesignatorDot]
                                    ) [FactorWithoutActPars]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  Num(
                                   100
                                  ) [Num]
                                ) [MultipleTerms]
                                ThereIsMoreExpr(
                                  NoMoreExpr(
                                  ) [NoMoreExpr]
                                  Plus(
                                  ) [Plus]
                                  SingleTerm(
                                    Num(
                                     1
                                    ) [Num]
                                  ) [SingleTerm]
                                ) [ThereIsMoreExpr]
                              ) [ExprPositive]
                            ) [DesStmAssign]
                          ) [DesignatorSingleStatement]
                        ) [StatementWithSingleStatement]
                      ) [StatementListExists]
                      StatementWithSingleStatement(
                        DesignatorSingleStatement(
                          DesStmInc(
                            DesignatorWithArr(
                             random
                              NoDesgArr(
                              ) [NoDesgArr]
                            ) [DesignatorWithArr]
                          ) [DesStmInc]
                        ) [DesignatorSingleStatement]
                      ) [StatementWithSingleStatement]
                    ) [StatementListExists]
                    StatementWithSingleStatement(
                      IfElseSingleStatement(
                        SingleCondition(
                          MulCondTerm(
                            SingleCondTerm(
                              CondFactRelop(
                                ExprPositive(
                                  SingleTerm(
                                    NormalFactor(
                                      DesignatorWithArr(
                                       random
                                        NoDesgArr(
                                        ) [NoDesgArr]
                                      ) [DesignatorWithArr]
                                    ) [NormalFactor]
                                  ) [SingleTerm]
                                  NoMoreExpr(
                                  ) [NoMoreExpr]
                                ) [ExprPositive]
                                GreaterThan(
                                ) [GreaterThan]
                                ExprPositive(
                                  MultipleTerms(
                                    SingleTerm(
                                      Num(
                                       25
                                      ) [Num]
                                    ) [SingleTerm]
                                    Multiply(
                                    ) [Multiply]
                                    Num(
                                     2
                                    ) [Num]
                                  ) [MultipleTerms]
                                  NoMoreExpr(
                                  ) [NoMoreExpr]
                                ) [ExprPositive]
                              ) [CondFactRelop]
                            ) [SingleCondTerm]
                            CondFactRelop(
                              ExprPositive(
                                SingleTerm(
                                  NormalFactor(
                                    DesignatorWithArr(
                                     random
                                      NoDesgArr(
                                      ) [NoDesgArr]
                                    ) [DesignatorWithArr]
                                  ) [NormalFactor]
                                ) [SingleTerm]
                                NoMoreExpr(
                                ) [NoMoreExpr]
                              ) [ExprPositive]
                              LessOrEqual(
                              ) [LessOrEqual]
                              ExprPositive(
                                SingleTerm(
                                  Num(
                                   1
                                  ) [Num]
                                ) [SingleTerm]
                                ThereIsMoreExpr(
                                  NoMoreExpr(
                                  ) [NoMoreExpr]
                                  Plus(
                                  ) [Plus]
                                  MultipleTerms(
                                    SingleTerm(
                                      Num(
                                       50
                                      ) [Num]
                                    ) [SingleTerm]
                                    Multiply(
                                    ) [Multiply]
                                    Num(
                                     2
                                    ) [Num]
                                  ) [MultipleTerms]
                                ) [ThereIsMoreExpr]
                              ) [ExprPositive]
                            ) [CondFactRelop]
                          ) [MulCondTerm]
                        ) [SingleCondition]
                        StatementWithStatements(
                          Statements(
                            StatementListExists(
                              StatementListExists(
                                StatementListExists(
                                  NoStatementList(
                                  ) [NoStatementList]
                                  StatementWithSingleStatement(
                                    DoWhileSingleStatement(
                                      StatementWithStatements(
                                        Statements(
                                          StatementListExists(
                                            StatementListExists(
                                              NoStatementList(
                                              ) [NoStatementList]
                                              StatementWithSingleStatement(
                                                DesignatorSingleStatement(
                                                  DesStmAssign(
                                                    DesignatorWithArr(
                                                     random
                                                      NoDesgArr(
                                                      ) [NoDesgArr]
                                                    ) [DesignatorWithArr]
                                                    Assignop(
                                                    ) [Assignop]
                                                    ExprPositive(
                                                      SingleTerm(
                                                        NormalFactor(
                                                          DesignatorWithArr(
                                                           random
                                                            NoDesgArr(
                                                            ) [NoDesgArr]
                                                          ) [DesignatorWithArr]
                                                        ) [NormalFactor]
                                                      ) [SingleTerm]
                                                      ThereIsMoreExpr(
                                                        NoMoreExpr(
                                                        ) [NoMoreExpr]
                                                        Minus(
                                                        ) [Minus]
                                                        SingleTerm(
                                                          Num(
                                                           1
                                                          ) [Num]
                                                        ) [SingleTerm]
                                                      ) [ThereIsMoreExpr]
                                                    ) [ExprPositive]
                                                  ) [DesStmAssign]
                                                ) [DesignatorSingleStatement]
                                              ) [StatementWithSingleStatement]
                                            ) [StatementListExists]
                                            StatementWithSingleStatement(
                                              IfSingleStatement(
                                                SingleCondition(
                                                  SingleCondTerm(
                                                    CondFactRelop(
                                                      ExprPositive(
                                                        SingleTerm(
                                                          NormalFactor(
                                                            DesignatorDot(
                                                             WorldTime
                                                              DesignatorWithArr(
                                                               currentTime
                                                                DesigArr(
                                                                  NoDesgArr(
                                                                  ) [NoDesgArr]
                                                                  ExprPositive(
                                                                    SingleTerm(
                                                                      NormalFactor(
                                                                        DesignatorWithArr(
                                                                         Today
                                                                          NoDesgArr(
                                                                          ) [NoDesgArr]
                                                                        ) [DesignatorWithArr]
                                                                      ) [NormalFactor]
                                                                    ) [SingleTerm]
                                                                    NoMoreExpr(
                                                                    ) [NoMoreExpr]
                                                                  ) [ExprPositive]
                                                                ) [DesigArr]
                                                              ) [DesignatorWithArr]
                                                            ) [DesignatorDot]
                                                          ) [NormalFactor]
                                                        ) [SingleTerm]
                                                        NoMoreExpr(
                                                        ) [NoMoreExpr]
                                                      ) [ExprPositive]
                                                      Equals(
                                                      ) [Equals]
                                                      ExprPositive(
                                                        SingleTerm(
                                                          NormalFactor(
                                                            DesignatorWithArr(
                                                             Late
                                                              NoDesgArr(
                                                              ) [NoDesgArr]
                                                            ) [DesignatorWithArr]
                                                          ) [NormalFactor]
                                                        ) [SingleTerm]
                                                        NoMoreExpr(
                                                        ) [NoMoreExpr]
                                                      ) [ExprPositive]
                                                    ) [CondFactRelop]
                                                  ) [SingleCondTerm]
                                                ) [SingleCondition]
                                                StatementWithSingleStatement(
                                                  ContinueSingleStatement(
                                                  ) [ContinueSingleStatement]
                                                ) [StatementWithSingleStatement]
                                              ) [IfSingleStatement]
                                            ) [StatementWithSingleStatement]
                                          ) [StatementListExists]
                                        ) [Statements]
                                      ) [StatementWithStatements]
                                      SingleCondition(
                                        SingleCondTerm(
                                          CondFactRelop(
                                            ExprPositive(
                                              SingleTerm(
                                                NormalFactor(
                                                  DesignatorWithArr(
                                                   random
                                                    NoDesgArr(
                                                    ) [NoDesgArr]
                                                  ) [DesignatorWithArr]
                                                ) [NormalFactor]
                                              ) [SingleTerm]
                                              NoMoreExpr(
                                              ) [NoMoreExpr]
                                            ) [ExprPositive]
                                            NotEqual(
                                            ) [NotEqual]
                                            ExprPositive(
                                              SingleTerm(
                                                Num(
                                                 0
                                                ) [Num]
                                              ) [SingleTerm]
                                              NoMoreExpr(
                                              ) [NoMoreExpr]
                                            ) [ExprPositive]
                                          ) [CondFactRelop]
                                        ) [SingleCondTerm]
                                      ) [SingleCondition]
                                    ) [DoWhileSingleStatement]
                                  ) [StatementWithSingleStatement]
                                ) [StatementListExists]
                                StatementWithSingleStatement(
                                  BreakSingleStatement(
                                  ) [BreakSingleStatement]
                                ) [StatementWithSingleStatement]
                              ) [StatementListExists]
                              StatementWithColon(
                                Label(
                                 loop
                                ) [Label]
                                DoWhileSingleStatement(
                                  StatementWithSingleStatement(
                                    DesignatorSingleStatement(
                                      DesStmInc(
                                        DesignatorWithArr(
                                         random
                                          NoDesgArr(
                                          ) [NoDesgArr]
                                        ) [DesignatorWithArr]
                                      ) [DesStmInc]
                                    ) [DesignatorSingleStatement]
                                  ) [StatementWithSingleStatement]
                                  SingleCondition(
                                    SingleCondTerm(
                                      CondFactRelop(
                                        ExprPositive(
                                          SingleTerm(
                                            NormalFactor(
                                              DesignatorWithArr(
                                               random
                                                NoDesgArr(
                                                ) [NoDesgArr]
                                              ) [DesignatorWithArr]
                                            ) [NormalFactor]
                                          ) [SingleTerm]
                                          NoMoreExpr(
                                          ) [NoMoreExpr]
                                        ) [ExprPositive]
                                        LessThan(
                                        ) [LessThan]
                                        ExprPositive(
                                          SingleTerm(
                                            Num(
                                             50
                                            ) [Num]
                                          ) [SingleTerm]
                                          NoMoreExpr(
                                          ) [NoMoreExpr]
                                        ) [ExprPositive]
                                      ) [CondFactRelop]
                                    ) [SingleCondTerm]
                                  ) [SingleCondition]
                                ) [DoWhileSingleStatement]
                              ) [StatementWithColon]
                            ) [StatementListExists]
                          ) [Statements]
                        ) [StatementWithStatements]
                        StatementWithSingleStatement(
                          GotoSingleStatement(
                            Label(
                             loop
                            ) [Label]
                          ) [GotoSingleStatement]
                        ) [StatementWithSingleStatement]
                      ) [IfElseSingleStatement]
                    ) [StatementWithSingleStatement]
                  ) [StatementListExists]
                  StatementWithSingleStatement(
                    DesignatorSingleStatement(
                      DesStmAssign(
                        DesignatorWithArr(
                         s
                          NoDesgArr(
                          ) [NoDesgArr]
                        ) [DesignatorWithArr]
                        Assignop(
                        ) [Assignop]
                        ExprPositive(
                          SingleTerm(
                            NormalFactor(
                              DesignatorWithArr(
                               success
                                NoDesgArr(
                                ) [NoDesgArr]
                              ) [DesignatorWithArr]
                            ) [NormalFactor]
                          ) [SingleTerm]
                          NoMoreExpr(
                          ) [NoMoreExpr]
                        ) [ExprPositive]
                      ) [DesStmAssign]
                    ) [DesignatorSingleStatement]
                  ) [StatementWithSingleStatement]
                ) [StatementListExists]
                StatementWithSingleStatement(
                  PrintSingleStatement(
                    ExprPositive(
                      SingleTerm(
                        Num(
                         5
                        ) [Num]
                      ) [SingleTerm]
                      NoMoreExpr(
                      ) [NoMoreExpr]
                    ) [ExprPositive]
                  ) [PrintSingleStatement]
                ) [StatementWithSingleStatement]
              ) [StatementListExists]
            ) [MethDeclNoParams]
          ) [MethodDeclarations]
        ) [ClassExtendsWithVarsAndMethods]
      ) [ListClass]
      VarDeclWrapper(
        Type(
         float
        ) [Type]
        VarDeclarations(
          SingleVarDecl(
            NormalVarDecl(
             c
            ) [NormalVarDecl]
          ) [SingleVarDecl]
          NormalVarDecl(
           d
          ) [NormalVarDecl]
        ) [VarDeclarations]
      ) [VarDeclWrapper]
    ) [ListVar]
    RecordDecl(
     r
      NoListVarDeclWrapper(
      ) [NoListVarDeclWrapper]
    ) [RecordDecl]
  ) [ListRecord]
  NoMethodDecl(
  ) [NoMethodDecl]
) [Program]
INFO  00:01:24,491 - ===================================
INFO  00:01:24,493 -  Program count calls = 1
