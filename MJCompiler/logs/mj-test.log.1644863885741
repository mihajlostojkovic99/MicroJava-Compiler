INFO  19:34:05,045 - Compiling source file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  19:34:05,103 - #2 program
INFO  19:34:05,103 - #49 Test
INFO  19:34:05,103 - #20 record
INFO  19:34:05,104 - #49 r1
INFO  19:34:05,105 - #45 {
INFO  19:34:05,105 - #49 int
INFO  19:34:05,106 - #49 x
INFO  19:34:05,106 - #43 [
INFO  19:34:05,106 - #44 ]
INFO  19:34:05,106 - #37 ;
INFO  19:34:05,106 - #49 int
INFO  19:34:05,107 - #49 y
INFO  19:34:05,107 - #37 ;
INFO  19:34:05,107 - #46 }
INFO  19:34:05,107 - #20 record
INFO  19:34:05,109 - #49 r2
INFO  19:34:05,109 - #45 {
INFO  19:34:05,109 - #49 r1
INFO  19:34:05,109 - #49 obj
INFO  19:34:05,110 - #43 [
INFO  19:34:05,117 - #44 ]
INFO  19:34:05,117 - #37 ;
INFO  19:34:05,120 - #46 }
INFO  19:34:05,120 - #20 record
INFO  19:34:05,120 - #49 r3
INFO  19:34:05,122 - #45 {
INFO  19:34:05,122 - #49 r2
INFO  19:34:05,122 - #49 obj
INFO  19:34:05,122 - #43 [
INFO  19:34:05,122 - #44 ]
INFO  19:34:05,122 - #37 ;
INFO  19:34:05,122 - #46 }
INFO  19:34:05,122 - #49 int
INFO  19:34:05,123 - #49 a
INFO  19:34:05,123 - #37 ;
INFO  19:34:05,123 - #49 char
INFO  19:34:05,123 - #49 b
INFO  19:34:05,123 - #37 ;
INFO  19:34:05,123 - #49 int
INFO  19:34:05,123 - #49 c
INFO  19:34:05,123 - #37 ;
INFO  19:34:05,124 - #45 {
INFO  19:34:05,124 - #14 void
INFO  19:34:05,125 - #49 abc
INFO  19:34:05,126 - #41 (
INFO  19:34:05,127 - #49 int
INFO  19:34:05,127 - #49 x
INFO  19:34:05,127 - #39 ,
INFO  19:34:05,128 - #49 r1
INFO  19:34:05,129 - #49 o5
INFO  19:34:05,130 - #42 )
INFO  19:34:05,130 - #49 r1
INFO  19:34:05,130 - #49 o1
INFO  19:34:05,130 - #37 ;
INFO  19:34:05,131 - #49 r2
INFO  19:34:05,131 - #49 o2
INFO  19:34:05,131 - #37 ;
INFO  19:34:05,131 - #49 r3
INFO  19:34:05,132 - #49 o3
INFO  19:34:05,132 - #37 ;
INFO  19:34:05,132 - #49 r3
INFO  19:34:05,132 - #49 o3arr
INFO  19:34:05,132 - #43 [
INFO  19:34:05,132 - #44 ]
INFO  19:34:05,132 - #37 ;
INFO  19:34:05,133 - #45 {
INFO  19:34:05,133 - #49 o1
INFO  19:34:05,136 - #34 =
INFO  19:34:05,137 - #10 new
INFO  19:34:05,139 - #49 r1
INFO  19:34:05,139 - #37 ;
INFO  19:34:05,142 - #46 }
INFO  19:34:05,142 - #14 void
INFO  19:34:05,143 - #49 main
INFO  19:34:05,143 - #41 (
INFO  19:34:05,143 - #42 )
INFO  19:34:05,143 - #49 r1
INFO  19:34:05,143 - #49 o1
INFO  19:34:05,143 - #37 ;
INFO  19:34:05,143 - #49 r2
INFO  19:34:05,143 - #49 o2
INFO  19:34:05,143 - #37 ;
INFO  19:34:05,143 - #49 r3
INFO  19:34:05,143 - #49 o3
INFO  19:34:05,144 - #37 ;
INFO  19:34:05,144 - #49 r3
INFO  19:34:05,144 - #49 o3arr
INFO  19:34:05,145 - #43 [
INFO  19:34:05,145 - #44 ]
INFO  19:34:05,145 - #37 ;
INFO  19:34:05,145 - #45 {
INFO  19:34:05,145 - #49 abc
INFO  19:34:05,145 - #41 (
INFO  19:34:05,145 - #47 5
INFO  19:34:05,146 - #39 ,
INFO  19:34:05,147 - #49 o1
INFO  19:34:05,147 - #42 )
INFO  19:34:05,147 - #37 ;
INFO  19:34:05,147 - #46 }
INFO  19:34:05,147 - #46 }
INFO  19:34:05,151 - Program(
  ProgramName(
   Test
  ) [ProgramName]
  ListVar(
    ListVar(
      ListVar(
        ListRecord(
          ListRecord(
            ListRecord(
              NoList(
              ) [NoList]
              RecordDecl(
                RecordDeclName(
                 r1
                ) [RecordDeclName]
                IsListVarDeclWrapper(
                  IsListVarDeclWrapper(
                    NoListVarDeclWrapper(
                    ) [NoListVarDeclWrapper]
                    VarDeclWrapperOk(
                      Type(
                       int
                      ) [Type]
                      SingleVarDecl(
                        ArrayVarDecl(
                         x
                        ) [ArrayVarDecl]
                      ) [SingleVarDecl]
                    ) [VarDeclWrapperOk]
                  ) [IsListVarDeclWrapper]
                  VarDeclWrapperOk(
                    Type(
                     int
                    ) [Type]
                    SingleVarDecl(
                      NormalVarDecl(
                       y
                      ) [NormalVarDecl]
                    ) [SingleVarDecl]
                  ) [VarDeclWrapperOk]
                ) [IsListVarDeclWrapper]
              ) [RecordDecl]
            ) [ListRecord]
            RecordDecl(
              RecordDeclName(
               r2
              ) [RecordDeclName]
              IsListVarDeclWrapper(
                NoListVarDeclWrapper(
                ) [NoListVarDeclWrapper]
                VarDeclWrapperOk(
                  Type(
                   r1
                  ) [Type]
                  SingleVarDecl(
                    ArrayVarDecl(
                     obj
                    ) [ArrayVarDecl]
                  ) [SingleVarDecl]
                ) [VarDeclWrapperOk]
              ) [IsListVarDeclWrapper]
            ) [RecordDecl]
          ) [ListRecord]
          RecordDecl(
            RecordDeclName(
             r3
            ) [RecordDeclName]
            IsListVarDeclWrapper(
              NoListVarDeclWrapper(
              ) [NoListVarDeclWrapper]
              VarDeclWrapperOk(
                Type(
                 r2
                ) [Type]
                SingleVarDecl(
                  ArrayVarDecl(
                   obj
                  ) [ArrayVarDecl]
                ) [SingleVarDecl]
              ) [VarDeclWrapperOk]
            ) [IsListVarDeclWrapper]
          ) [RecordDecl]
        ) [ListRecord]
        VarDeclWrapperOk(
          Type(
           int
          ) [Type]
          SingleVarDecl(
            NormalVarDecl(
             a
            ) [NormalVarDecl]
          ) [SingleVarDecl]
        ) [VarDeclWrapperOk]
      ) [ListVar]
      VarDeclWrapperOk(
        Type(
         char
        ) [Type]
        SingleVarDecl(
          NormalVarDecl(
           b
          ) [NormalVarDecl]
        ) [SingleVarDecl]
      ) [VarDeclWrapperOk]
    ) [ListVar]
    VarDeclWrapperOk(
      Type(
       int
      ) [Type]
      SingleVarDecl(
        NormalVarDecl(
         c
        ) [NormalVarDecl]
      ) [SingleVarDecl]
    ) [VarDeclWrapperOk]
  ) [ListVar]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethDeclParams(
        MethodRetVoid(
        ) [MethodRetVoid]
        MethodName(
         abc
        ) [MethodName]
        FormParameters(
          SingleFormPars(
            FormalParameter(
              Type(
               int
              ) [Type]
             x
            ) [FormalParameter]
          ) [SingleFormPars]
          FormalParameter(
            Type(
             r1
            ) [Type]
           o5
          ) [FormalParameter]
        ) [FormParameters]
        IsListVarDeclWrapper(
          IsListVarDeclWrapper(
            IsListVarDeclWrapper(
              IsListVarDeclWrapper(
                NoListVarDeclWrapper(
                ) [NoListVarDeclWrapper]
                VarDeclWrapperOk(
                  Type(
                   r1
                  ) [Type]
                  SingleVarDecl(
                    NormalVarDecl(
                     o1
                    ) [NormalVarDecl]
                  ) [SingleVarDecl]
                ) [VarDeclWrapperOk]
              ) [IsListVarDeclWrapper]
              VarDeclWrapperOk(
                Type(
                 r2
                ) [Type]
                SingleVarDecl(
                  NormalVarDecl(
                   o2
                  ) [NormalVarDecl]
                ) [SingleVarDecl]
              ) [VarDeclWrapperOk]
            ) [IsListVarDeclWrapper]
            VarDeclWrapperOk(
              Type(
               r3
              ) [Type]
              SingleVarDecl(
                NormalVarDecl(
                 o3
                ) [NormalVarDecl]
              ) [SingleVarDecl]
            ) [VarDeclWrapperOk]
          ) [IsListVarDeclWrapper]
          VarDeclWrapperOk(
            Type(
             r3
            ) [Type]
            SingleVarDecl(
              ArrayVarDecl(
               o3arr
              ) [ArrayVarDecl]
            ) [SingleVarDecl]
          ) [VarDeclWrapperOk]
        ) [IsListVarDeclWrapper]
        StatementListExists(
          NoStatementList(
          ) [NoStatementList]
          StatementWithSingleStatement(
            DesignatorSingleStatement(
              DesStmAssign(
                DesignatorSimple(
                 o1
                ) [DesignatorSimple]
                AssignWrap(
                  Assignop(
                  ) [Assignop]
                  Expr(
                    SingleTerm(
                      FactorWrapper(
                        NoUnary(
                        ) [NoUnary]
                        NewFactor(
                          Type(
                           r1
                          ) [Type]
                        ) [NewFactor]
                      ) [FactorWrapper]
                    ) [SingleTerm]
                    NoMoreExpr(
                    ) [NoMoreExpr]
                  ) [Expr]
                ) [AssignWrap]
              ) [DesStmAssign]
            ) [DesignatorSingleStatement]
          ) [StatementWithSingleStatement]
        ) [StatementListExists]
      ) [MethDeclParams]
    ) [MethodDeclarations]
    MethDeclNoParams(
      MethodRetVoid(
      ) [MethodRetVoid]
      MethodName(
       main
      ) [MethodName]
      IsListVarDeclWrapper(
        IsListVarDeclWrapper(
          IsListVarDeclWrapper(
            IsListVarDeclWrapper(
              NoListVarDeclWrapper(
              ) [NoListVarDeclWrapper]
              VarDeclWrapperOk(
                Type(
                 r1
                ) [Type]
                SingleVarDecl(
                  NormalVarDecl(
                   o1
                  ) [NormalVarDecl]
                ) [SingleVarDecl]
              ) [VarDeclWrapperOk]
            ) [IsListVarDeclWrapper]
            VarDeclWrapperOk(
              Type(
               r2
              ) [Type]
              SingleVarDecl(
                NormalVarDecl(
                 o2
                ) [NormalVarDecl]
              ) [SingleVarDecl]
            ) [VarDeclWrapperOk]
          ) [IsListVarDeclWrapper]
          VarDeclWrapperOk(
            Type(
             r3
            ) [Type]
            SingleVarDecl(
              NormalVarDecl(
               o3
              ) [NormalVarDecl]
            ) [SingleVarDecl]
          ) [VarDeclWrapperOk]
        ) [IsListVarDeclWrapper]
        VarDeclWrapperOk(
          Type(
           r3
          ) [Type]
          SingleVarDecl(
            ArrayVarDecl(
             o3arr
            ) [ArrayVarDecl]
          ) [SingleVarDecl]
        ) [VarDeclWrapperOk]
      ) [IsListVarDeclWrapper]
      StatementListExists(
        NoStatementList(
        ) [NoStatementList]
        StatementWithSingleStatement(
          DesignatorSingleStatement(
            DesStmFuncParams(
              DesignatorSimple(
               abc
              ) [DesignatorSimple]
              ActParsHelp(
              ) [ActParsHelp]
              MulActPars(
                SingleActPar(
                  Expr(
                    SingleTerm(
                      FactorWrapper(
                        NoUnary(
                        ) [NoUnary]
                        Num(
                         5
                        ) [Num]
                      ) [FactorWrapper]
                    ) [SingleTerm]
                    NoMoreExpr(
                    ) [NoMoreExpr]
                  ) [Expr]
                ) [SingleActPar]
                Expr(
                  SingleTerm(
                    FactorWrapper(
                      NoUnary(
                      ) [NoUnary]
                      NormalFactor(
                        DesignatorSimple(
                         o1
                        ) [DesignatorSimple]
                      ) [NormalFactor]
                    ) [FactorWrapper]
                  ) [SingleTerm]
                  NoMoreExpr(
                  ) [NoMoreExpr]
                ) [Expr]
              ) [MulActPars]
            ) [DesStmFuncParams]
          ) [DesignatorSingleStatement]
        ) [StatementWithSingleStatement]
      ) [StatementListExists]
    ) [MethDeclNoParams]
  ) [MethodDeclarations]
) [Program]
INFO  19:34:05,152 - ===================================
INFO  19:34:05,166 - Access to local record 'o1' detected. Var: Class [Fld x: Array of Int Fld: Int, 1, 2 ], 2, 1 in line 14.
INFO  19:34:05,169 - Access to local record 'o1' detected. Var: Class [Fld x: Array of Int Fld: Int, 1, 2 ], 0, 1 in line 19.
INFO  19:34:05,170 - Global function 'abc' call detectedMeth abc: None [Var: Int, 0, 1 Var: Class [Fld x: Array of Int Fld: Int, 1, 2 ], 1, 1 Var: Class [Fld x: Array of Int Fld: Int, 1, 2 ], 2, 1 Var: Class [Fld obj: Array of Class ], 3, 1 Var: Class [Fld obj: Array of Class ], 4, 1 Var o3arr: Array of Class ], 0, 2 in line 19.
INFO  19:34:05,170 - ===================================
INFO  19:34:05,173 - Generating bytecode file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.obj
INFO  19:34:05,179 - Parsiranje uspesno zavrseno!
