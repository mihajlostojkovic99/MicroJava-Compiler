INFO  23:02:01,782 - Compiling source file: C:\Users\Test\Desktop\PP1\workspace\MJCompiler\test\program.mj
INFO  23:02:01,829 - #2 program
INFO  23:02:01,829 - #50 p
INFO  23:02:01,829 - #7 const
INFO  23:02:01,830 - #50 int
INFO  23:02:01,830 - #50 size
INFO  23:02:01,831 - #35 =
INFO  23:02:01,831 - #48 10
INFO  23:02:01,831 - #38 ;
INFO  23:02:01,831 - #50 int
INFO  23:02:01,832 - #50 a
INFO  23:02:01,832 - #40 ,
INFO  23:02:01,832 - #50 b
INFO  23:02:01,832 - #38 ;
INFO  23:02:01,832 - #4 class
INFO  23:02:01,833 - #50 Table
INFO  23:02:01,833 - #16 extends
INFO  23:02:01,833 - #50 A
INFO  23:02:01,833 - #46 {
INFO  23:02:01,833 - #50 int
INFO  23:02:01,833 - #50 a
INFO  23:02:01,834 - #40 ,
INFO  23:02:01,834 - #50 b
INFO  23:02:01,836 - #44 [
INFO  23:02:01,837 - #45 ]
INFO  23:02:01,837 - #38 ;
INFO  23:02:01,837 - #46 {
INFO  23:02:01,837 - #15 void
INFO  23:02:01,838 - #50 putp
INFO  23:02:01,838 - #42 (
INFO  23:02:01,838 - #50 int
INFO  23:02:01,838 - #50 a
INFO  23:02:01,838 - #40 ,
INFO  23:02:01,838 - #50 int
INFO  23:02:01,838 - #50 idx
INFO  23:02:01,838 - #43 )
INFO  23:02:01,839 - #46 {
INFO  23:02:01,839 - #47 }
INFO  23:02:01,839 - #50 int
INFO  23:02:01,840 - #50 testingMore
INFO  23:02:01,840 - #42 (
INFO  23:02:01,840 - #43 )
INFO  23:02:01,840 - #50 float
INFO  23:02:01,840 - #50 random
INFO  23:02:01,840 - #38 ;
INFO  23:02:01,840 - #46 {
INFO  23:02:01,840 - #50 random
INFO  23:02:01,840 - #35 =
INFO  23:02:01,841 - #50 a
INFO  23:02:01,841 - #41 .
INFO  23:02:01,841 - #50 fetchRandomTest
INFO  23:02:01,841 - #42 (
INFO  23:02:01,841 - #43 )
INFO  23:02:01,842 - #24 *
INFO  23:02:01,842 - #48 100
INFO  23:02:01,843 - #22 +
INFO  23:02:01,843 - #48 1
INFO  23:02:01,844 - #38 ;
INFO  23:02:01,844 - #50 random
INFO  23:02:01,845 - #36 ++
INFO  23:02:01,845 - #38 ;
INFO  23:02:01,845 - #8 if
INFO  23:02:01,845 - #42 (
INFO  23:02:01,845 - #50 random
INFO  23:02:01,845 - #29 >
INFO  23:02:01,845 - #48 25
INFO  23:02:01,846 - #24 *
INFO  23:02:01,846 - #48 2
INFO  23:02:01,846 - #33 &&
INFO  23:02:01,847 - #50 random
INFO  23:02:01,854 - #32 <=
INFO  23:02:01,855 - #48 1
INFO  23:02:01,855 - #22 +
INFO  23:02:01,855 - #48 50
INFO  23:02:01,855 - #24 *
INFO  23:02:01,855 - #48 2
INFO  23:02:01,856 - #43 )
INFO  23:02:01,856 - #46 {
INFO  23:02:01,856 - #47 }
INFO  23:02:01,856 - #47 }
INFO  23:02:01,857 - #47 }
INFO  23:02:01,857 - #47 }
INFO  23:02:01,857 - #50 float
INFO  23:02:01,857 - #50 c
INFO  23:02:01,857 - #40 ,
INFO  23:02:01,857 - #50 d
INFO  23:02:01,857 - #38 ;
INFO  23:02:01,857 - #21 record
INFO  23:02:01,857 - #50 r
INFO  23:02:01,857 - #46 {
INFO  23:02:01,857 - #47 }
INFO  23:02:01,857 - #46 {
INFO  23:02:01,858 - #47 }
INFO  23:02:01,860 - Program(
 p
  ListRecord(
    ListVar(
      ListClass(
        ListVar(
          ListConst(
            NoList(
            ) [NoList]
            ConstDeclWrapper(
              Type(
               int
              ) [Type]
              SingleConstDeclaration(
                ConstDeclNumber(
                 size
                 10
                ) [ConstDeclNumber]
              ) [SingleConstDeclaration]
            ) [ConstDeclWrapper]
          ) [ListConst]
          VarDeclWrapper(
            Type(
             int
            ) [Type]
            VarDeclarations(
              SingleVarDecl(
                NormalVarDecl(
                 a
                ) [NormalVarDecl]
              ) [SingleVarDecl]
              NormalVarDecl(
               b
              ) [NormalVarDecl]
            ) [VarDeclarations]
          ) [VarDeclWrapper]
        ) [ListVar]
        ClassExtendsWithVarsAndMethods(
         Table
          Type(
           A
          ) [Type]
          VarDeclWrapper(
            Type(
             int
            ) [Type]
            VarDeclarations(
              SingleVarDecl(
                NormalVarDecl(
                 a
                ) [NormalVarDecl]
              ) [SingleVarDecl]
              ArrayVarDecl(
               b
              ) [ArrayVarDecl]
            ) [VarDeclarations]
          ) [VarDeclWrapper]
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethDeclVoidParamsNoVars(
               putp
                FormParameters(
                  SingleFormPars(
                    FormalParameter(
                      Type(
                       int
                      ) [Type]
                     a
                    ) [FormalParameter]
                  ) [SingleFormPars]
                  FormalParameter(
                    Type(
                     int
                    ) [Type]
                   idx
                  ) [FormalParameter]
                ) [FormParameters]
                NoStatementList(
                ) [NoStatementList]
              ) [MethDeclVoidParamsNoVars]
            ) [MethodDeclarations]
            MethDeclNoParams(
              Type(
               int
              ) [Type]
             testingMore
              VarDeclWrapper(
                Type(
                 float
                ) [Type]
                SingleVarDecl(
                  NormalVarDecl(
                   random
                  ) [NormalVarDecl]
                ) [SingleVarDecl]
              ) [VarDeclWrapper]
              StatementListExists(
                StatementListExists(
                  StatementListExists(
                    NoStatementList(
                    ) [NoStatementList]
                    StatementWithSingleStatement(
                      DesignatorSingleStatement(
                        DesStmAssign(
                          DesignatorWithArr(
                           random
                            NoDesgArr(
                            ) [NoDesgArr]
                          ) [DesignatorWithArr]
                          Assignop(
                          ) [Assignop]
                          ExprPositive(
                            MultipleTerms(
                              SingleTerm(
                                FactorWithoutActPars(
                                  DesignatorDot(
                                   a
                                    DesignatorWithArr(
                                     fetchRandomTest
                                      NoDesgArr(
                                      ) [NoDesgArr]
                                    ) [DesignatorWithArr]
                                  ) [DesignatorDot]
                                ) [FactorWithoutActPars]
                              ) [SingleTerm]
                              Multiply(
                              ) [Multiply]
                              Num(
                               100
                              ) [Num]
                            ) [MultipleTerms]
                            ThereIsMoreExpr(
                              NoMoreExpr(
                              ) [NoMoreExpr]
                              Plus(
                              ) [Plus]
                              SingleTerm(
                                Num(
                                 1
                                ) [Num]
                              ) [SingleTerm]
                            ) [ThereIsMoreExpr]
                          ) [ExprPositive]
                        ) [DesStmAssign]
                      ) [DesignatorSingleStatement]
                    ) [StatementWithSingleStatement]
                  ) [StatementListExists]
                  StatementWithSingleStatement(
                    DesignatorSingleStatement(
                      DesStmInc(
                        DesignatorWithArr(
                         random
                          NoDesgArr(
                          ) [NoDesgArr]
                        ) [DesignatorWithArr]
                      ) [DesStmInc]
                    ) [DesignatorSingleStatement]
                  ) [StatementWithSingleStatement]
                ) [StatementListExists]
                StatementWithSingleStatement(
                  IfSingleStatement(
                    SingleCondition(
                      MulCondTerm(
                        SingleCondTerm(
                          CondFactRelop(
                            ExprPositive(
                              SingleTerm(
                                NormalFactor(
                                  DesignatorWithArr(
                                   random
                                    NoDesgArr(
                                    ) [NoDesgArr]
                                  ) [DesignatorWithArr]
                                ) [NormalFactor]
                              ) [SingleTerm]
                              NoMoreExpr(
                              ) [NoMoreExpr]
                            ) [ExprPositive]
                            GreaterThan(
                            ) [GreaterThan]
                            ExprPositive(
                              MultipleTerms(
                                SingleTerm(
                                  Num(
                                   25
                                  ) [Num]
                                ) [SingleTerm]
                                Multiply(
                                ) [Multiply]
                                Num(
                                 2
                                ) [Num]
                              ) [MultipleTerms]
                              NoMoreExpr(
                              ) [NoMoreExpr]
                            ) [ExprPositive]
                          ) [CondFactRelop]
                        ) [SingleCondTerm]
                        CondFactRelop(
                          ExprPositive(
                            SingleTerm(
                              NormalFactor(
                                DesignatorWithArr(
                                 random
                                  NoDesgArr(
                                  ) [NoDesgArr]
                                ) [DesignatorWithArr]
                              ) [NormalFactor]
                            ) [SingleTerm]
                            NoMoreExpr(
                            ) [NoMoreExpr]
                          ) [ExprPositive]
                          LessOrEqual(
                          ) [LessOrEqual]
                          ExprPositive(
                            SingleTerm(
                              Num(
                               1
                              ) [Num]
                            ) [SingleTerm]
                            ThereIsMoreExpr(
                              NoMoreExpr(
                              ) [NoMoreExpr]
                              Plus(
                              ) [Plus]
                              MultipleTerms(
                                SingleTerm(
                                  Num(
                                   50
                                  ) [Num]
                                ) [SingleTerm]
                                Multiply(
                                ) [Multiply]
                                Num(
                                 2
                                ) [Num]
                              ) [MultipleTerms]
                            ) [ThereIsMoreExpr]
                          ) [ExprPositive]
                        ) [CondFactRelop]
                      ) [MulCondTerm]
                    ) [SingleCondition]
                    StatementWithStatements(
                      Statements(
                        NoStatementList(
                        ) [NoStatementList]
                      ) [Statements]
                    ) [StatementWithStatements]
                  ) [IfSingleStatement]
                ) [StatementWithSingleStatement]
              ) [StatementListExists]
            ) [MethDeclNoParams]
          ) [MethodDeclarations]
        ) [ClassExtendsWithVarsAndMethods]
      ) [ListClass]
      VarDeclWrapper(
        Type(
         float
        ) [Type]
        VarDeclarations(
          SingleVarDecl(
            NormalVarDecl(
             c
            ) [NormalVarDecl]
          ) [SingleVarDecl]
          NormalVarDecl(
           d
          ) [NormalVarDecl]
        ) [VarDeclarations]
      ) [VarDeclWrapper]
    ) [ListVar]
    RecordDeclNoVars(
     r
    ) [RecordDeclNoVars]
  ) [ListRecord]
  NoMethodDecl(
  ) [NoMethodDecl]
) [Program]
INFO  23:02:01,860 - ===================================
INFO  23:02:01,863 -  Program count calls = 1
